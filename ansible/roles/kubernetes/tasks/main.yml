# Copy modules file
- name: Copy /etc/modprobe.d/k8s.conf
  become: true
  copy:
    src: modules_k8s.conf
    dest: /etc/modprobe.d/k8s.conf

# Load br_netfilter module
- name: Add the br_netfilter module
  become: true
  community.general.modprobe:
    name: br_netfilter
    state: present


# Copy sysctl file
- name: Copy /etc/sysctl.d/k8s.conf
  become: true
  copy:
    src: sysctl_k8s.conf
    dest: /etc/sysctl.d/k8s.conf

# Set sysctl parameters
- name: Make sure syctl entries are loaded
  become: true
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    reload: yes

- name: Make sure syctl entries are loaded
  become: true
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    reload: yes

# Add apt key for kubernetes packages
- name: Add apt key
  become: true
  ansible.builtin.get_url:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg

# Copy apt list
- name: Copy /etc/apt/sources.list.d/kubernetes.list
  become: true
  ansible.builtin.copy:
    src: kubernetes.list
    dest: /etc/apt/sources.list.d/kubernetes.list

# Update apt repository cache
- name: Update apt repositories cache
  become: true
  ansible.builtin.apt:
    update_cache: yes

# Install kubernetes packages
- name: Install Kubernetes
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
  vars:
    packages:
    - kubelet
    - kubeadm
    - kubectl

# Mark kubernetes packas on hold to prevent upgrades
- name: Hold kubeadm
  become: true
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl

# Enable bash completion for kubectl
- name: Set bash completion for kubernetes
  become: true
  ansible.builtin.shell:
    cmd: kubectl completion bash > /etc/bash_completion.d/kubectl