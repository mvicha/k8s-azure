- name: Label node
  ansible.builtin.shell:
    cmd: kubectl label --overwrite node node01 mysql=server

# Create mysql namespace
- name: Create a mysql namespace
  community.kubernetes.k8s:
    name: mysql
    api_version: v1
    kind: Namespace
    state: present

- name: Get mysql secret
  ansible.builtin.shell:
    cmd: python3 /opt/utils/get_keyvault_value.py keyvaultk8s mysql-admin-password
  register: mysqladmin

- name: Register mysql admin password
  ansible.builtin.set_fact:
    mysql_admin_password: "{{ mysqladmin.stdout | string | b64encode }}"
  when: mysqladmin | length > 0

- name: Deploy MySQL secrets
  community.kubernetes.k8s:
    state: present
    template:
      path: secrets.yaml.j2

- name: Create MySQL configmap for adding users
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('file', 'add_mysql_user_configmap.yaml') | from_yaml }}"

- name: Create MySQL service
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: mysql-svc
        namespace: mysql
        labels:
          app: mysql
      spec:
        selector:
          app: mysql
        ports:
        - protocol: TCP
          name: mysql-tcp
          port: 3306
          targetPort: 3306

- name: Create MySQL deployment
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('file', 'mysql_deployment.yaml') | from_yaml }}"
    wait: yes
    wait_sleep: 10
    wait_timeout: 600
    wait_condition:
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    validate:
      fail_on_error: yes
